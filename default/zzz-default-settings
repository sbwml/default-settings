#!/bin/sh

. /etc/os-release
. /lib/functions/uci-defaults.sh

[ $(uname -m) = "x86_64" ] && alias board_name="echo x86_64"
[ "$OPENWRT_BOARD" = "armsr/armv8" ] && alias board_name="echo armsr,armv8"

# OTA
if [ "$VERSION_TYPE" = "minimal" ]; then
    OTA_URL="https://api.cooluc.com/openwrt/ota_minimal.json"
else
    OTA_URL="https://api.cooluc.com/openwrt/ota.json"
fi

kernel_version=$(uname -r | awk -F '[.-]' '{print $1"."$2}')

devices_setup()
{
    case "$(board_name)" in
    armsr,armv8)
        [ $(uname -r | awk -F. '{print $1}') = 6 ] && {
            [ ! -d "/usr/share/openwrt_core" ] && {
                [ "$kernel_version" = "6.12" ] && openwrt_core="openwrt_core/armsr-armv8" || openwrt_core="kmod-armsr-armv8/main"
                sed -i '/openwrt_core/d' /etc/opkg/distfeeds.conf
                sed -i "\$a\src/gz openwrt_core https://raw.githubusercontent.com/sbwml/${openwrt_core}/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
            }
            uci set ota.config.api_url="$OTA_URL"
            uci commit ota
        }
        ;;
    friendlyarm,nanopi-r4s|\
    friendlyarm,nanopi-r5c|\
    friendlyarm,nanopi-r5s)
        uci set irqbalance.irqbalance.enabled='0'
        uci commit irqbalance
        service irqbalance stop
        [ ! -d "/usr/share/openwrt_core" ] && {
            [ "$kernel_version" = "6.12" ] && openwrt_core="openwrt_core/aarch64_generic" || openwrt_core="kmod-aarch64/main"
            sed -i '/openwrt_core/d' /etc/opkg/distfeeds.conf
            sed -i "\$a\src/gz openwrt_core https://raw.githubusercontent.com/sbwml/${openwrt_core}/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
        }
        uci set ota.config.api_url="$OTA_URL"
        uci commit ota
        ;;
    netgear,r8500)
        [ ! -d "/usr/share/openwrt_core" ] && {
            [ "$kernel_version" = "6.12" ] && openwrt_core="openwrt_core/arm_cortex-a9" || openwrt_core="kmod-bcm53xx/main"
            sed -i '/openwrt_core/d' /etc/opkg/distfeeds.conf
            sed -i "\$a\src/gz openwrt_core https://raw.githubusercontent.com/sbwml/${openwrt_core}/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
        }
        uci set ota.config.api_url="$OTA_URL"
        uci commit ota
        [ -f "/etc/config/wireless" ] && [ $(grep -c "default_radio" /etc/config/wireless) -ge '1' ] && {
            uci -q del wireless.default_radio2
            uci -q del wireless.default_radio1
            uci -q del wireless.default_radio0
            uci -q del wireless.wifinet0
            uci -q del wireless.wifinet1
            uci -q del wireless.wifinet2
            uci -q set wireless.wifinet0=wifi-iface
            uci -q set wireless.wifinet0.device='radio0'
            uci -q set wireless.wifinet0.mode='ap'
            uci -q set wireless.wifinet0.ssid='NETGEAR_5G-2'
            uci -q set wireless.wifinet0.encryption='none'
            uci -q set wireless.wifinet0.network='lan'
            uci -q set wireless.radio0.htmode='VHT80'
            uci -q set wireless.radio0.channel='161'
            uci -q set wireless.radio0.country='AU'
            uci -q set wireless.radio0.cell_density='3'
            uci -q del wireless.radio0.disabled
            uci -q set wireless.wifinet1=wifi-iface
            uci -q set wireless.wifinet1.device='radio1'
            uci -q set wireless.wifinet1.mode='ap'
            uci -q set wireless.wifinet1.ssid='NETGEAR_2.4G'
            uci -q set wireless.wifinet1.encryption='none'
            uci -q set wireless.wifinet1.network='lan'
            uci -q set wireless.radio1.htmode='HT40'
            uci -q set wireless.radio1.channel='1'
            uci -q set wireless.radio1.country='AU'
            uci -q set wireless.radio1.cell_density='3'
            uci -q del wireless.radio1.disabled
            uci -q set wireless.wifinet2=wifi-iface
            uci -q set wireless.wifinet2.device='radio2'
            uci -q set wireless.wifinet2.mode='ap'
            uci -q set wireless.wifinet2.ssid='NETGEAR_5G-1'
            uci -q set wireless.wifinet2.encryption='none'
            uci -q set wireless.wifinet2.network='lan'
            uci -q set wireless.radio2.htmode='VHT80'
            uci -q set wireless.radio2.channel='36'
            uci -q del wireless.radio2.disabled
            uci commit wireless
            /sbin/wifi >/dev/null 2>&1
        }
        ;;
    x86_64)
        [ $(uname -r | awk -F. '{print $1}') = 6 ] && {
            [ -f /sys/kernel/btf/vmlinux ] && [ ! -d "/usr/share/openwrt_core" ] && {
                [ "$kernel_version" = "6.12" ] && openwrt_core="openwrt_core/x86_64" || openwrt_core="kmod-x86_64/main"
                sed -i '/openwrt_core/d' /etc/opkg/distfeeds.conf
                sed -i "\$a\src/gz openwrt_core https://raw.githubusercontent.com/sbwml/${openwrt_core}/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
            }
        }
        uci set ota.config.api_url="$OTA_URL"
        uci commit ota
        ;;
    esac
}

# theme
if [ "$VERSION_TYPE" != "minimal" ] && [ -z "$(uci -q get luci.main.pollinterval)" ]; then
    uci set luci.main.mediaurlbase='/luci-static/argon'
    uci set luci.main.pollinterval='3'
    uci commit luci
fi

# timezone
uci set system.@system[0].timezone=CST-8
uci set system.@system[0].zonename=Asia/Shanghai
uci commit system

# log level
uci set system.@system[0].conloglevel='1'
uci set system.@system[0].cronloglevel='9'
uci commit system

# zram
mem_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')
zram_size=$(echo | awk "{print int($mem_total*0.25/1024)}")
uci set system.@system[0].zram_size_mb="$zram_size"
uci set system.@system[0].zram_comp_algo='zstd'
uci commit system

# opkg mirror
sed -i 's,downloads.openwrt.org,mirrors.pku.edu.cn/openwrt,g' /etc/opkg/distfeeds.conf

# extra packages
echo "src/gz openwrt_extras https://opkg.cooluc.com/openwrt-23.05/$(. /etc/openwrt_release ; echo $DISTRIB_ARCH)" >> /etc/opkg/distfeeds.conf

# nginx
uci set nginx.global.uci_enable='true'
uci del nginx._lan
uci del nginx._redirect2ssl
uci add nginx server
uci rename nginx.@server[0]='_lan'
uci set nginx._lan.server_name='_lan'
uci add_list nginx._lan.listen='80 default_server'
uci add_list nginx._lan.listen='[::]:80 default_server'
#uci add_list nginx._lan.include='restrict_locally'
uci add_list nginx._lan.include='conf.d/*.locations'
uci set nginx._lan.access_log='off; # logd openwrt'
uci commit nginx
service nginx restart

# docker mirror
if [ -f /etc/config/dockerd ] && [ $(grep -c daocloud.io /etc/config/dockerd) -eq '0' ]; then
    uci add_list dockerd.globals.registry_mirrors="https://docker.m.daocloud.io"
    uci commit dockerd
fi

# firewall
[ $(grep -c shortcut_fe /etc/config/firewall) -eq '0' ] && uci set firewall.@defaults[0].flow_offloading='1'
if [ $(ifconfig -a | grep -o '^eth[^ ]*' | wc -l) -le 1 ] || [ "$OPENWRT_BOARD" = "armsr/armv8" ]; then
    uci set firewall.@zone[1].input='ACCEPT'
fi
uci set firewall.@defaults[0].input='ACCEPT'
uci commit firewall

# diagnostics
if [ $(uci -q get luci.diag.ping) = "openwrt.org" ]; then
    uci set luci.diag.dns='www.qq.com'
    uci set luci.diag.ping='www.qq.com'
    uci set luci.diag.route='www.qq.com'
    uci commit luci
fi

# packet steering
uci -q get network.globals.packet_steering > /dev/null || {
    uci set network.globals='globals'
    [ "${VERSION%.*}" = 23 ] && uci set network.globals.packet_steering=1 || uci set network.globals.packet_steering=2
    uci set network.globals.steering_flows='128'
    uci commit network
}

# disable coremark
sed -i '/coremark/d' /etc/crontabs/root
crontab /etc/crontabs/root

# init
devices_setup

exit 0
